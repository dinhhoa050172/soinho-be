model Order {
  id BigInt @id @default(autoincrement())

  totalAmount Decimal     @map("total_amount") @db.Decimal(10, 2)
  status      StatusOrder @default(PENDING) @map("status")

  shippingFullName   String  @map("shipping_full_name") @db.VarChar(100)
  shippingPhone      String? @map("shipping_phone") @db.VarChar(20)
  shippingStreet     String  @map("shipping_street") @db.VarChar(255)
  shippingWard       String? @map("shipping_ward") @db.VarChar(100)
  shippingDistrict   String? @map("shipping_district") @db.VarChar(100)
  shippingProvince   String? @map("shipping_province") @db.VarChar(100)
  shippingPostalCode String? @map("shipping_postal_code") @db.VarChar(20)
  shippingCountry    String  @default("Vietnam") @map("shipping_country") @db.VarChar(100)

  userId     BigInt @map("user_id") @db.BigInt
  shippingId BigInt @unique @map("shipping_id") @db.BigInt

  createdAt DateTime? @default(now()) @map("created_date") @db.Timestamptz(3)
  createdBy String    @map("created_by") @db.VarChar(36)
  updatedAt DateTime? @updatedAt @map("modified_date") @db.Timestamptz(3)
  updatedBy String?   @map("modified_by") @db.VarChar(36)

  user      User        @relation(fields: [userId], references: [id])
  shipping  Shipping    @relation(fields: [shippingId], references: [id])
  payment   Payment?
  OrderItem OrderItem[]

  @@map("dt_order")
}

enum StatusOrder {
  PENDING
  COMPLETED
  CANCELLED
  REFUNDED
  DELIVERED
}
