model Transaction {
    id BigInt @id @default(autoincrement())

    orderId    BigInt            @map("order_id") @db.BigInt()
    userId     BigInt            @map("user_id") @db.BigInt()
    productId  BigInt            @map("product_id") @db.BigInt()
    quantity   Int               @map("quantity") @db.Integer
    totalPrice Decimal           @map("total_price") @db.Decimal(10, 2)
    status     StatusTransaction @default(PENDING) @map("status")

    createdAt DateTime? @default(now()) @map("created_date") @db.Timestamptz(3)
    createdBy String    @map("created_by") @db.VarChar(36)
    updatedAt DateTime? @updatedAt @map("modified_date") @db.Timestamptz(3)
    updatedBy String?   @map("modified_by") @db.VarChar(36)

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@map("dt_transaction")
}

enum StatusTransaction {
    PENDING
    COMPLETED
    CANCELLED
    REFUNDED
}
